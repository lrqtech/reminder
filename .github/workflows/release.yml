name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build and Release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]  # To cover both architectures

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build Reminder app
        run: |
          mkdir -p build
          FILENAME=reminder-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            FILENAME="${FILENAME}.exe"
          fi
          GOOS=${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'darwin' || 'windows'} \
          GOARCH=${{ matrix.arch }} CGO_ENABLED=0 \
          go build -ldflags "-s -w" -o build/$FILENAME

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          FILENAME=reminder-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            FILENAME="${FILENAME}.exe"
          fi
          gh release upload "${{ github.event.release.tag_name }}" "build/$FILENAME" --clobber
